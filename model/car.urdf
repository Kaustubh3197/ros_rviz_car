<?xml version="1.0"?>
<robot name="BMW" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:property name="c_len" value="4.633"/>
    <xacro:property name="c_width" value="1.811"/>
    <xacro:property name="c_height" value="1.429"/>
    <xacro:property name="w_diam" value="0.6"/>
    <xacro:property name="w_width" value="0.3"/>
    <xacro:property name="wheel_mass" value="10"/>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>
    
    <link name="base_link">
        <visual>
            <origin xyz="0 ${c_width/2} 0"/>
            <geometry>
                <mesh filename="package://rviz_car/model/car.dae"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 ${c_width/2} 0"/>
            <geometry>
                <mesh filename="package://rviz_car/model/car.dae"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="500.0" />
            <inertia ixx="3.942664" ixy="1e-6" ixz="-1.080847" iyy="15.578393" iyz="0.0" izz="16.676447" />
            <origin xyz="2.599024 0 0.644389"/>
        </inertial>
    </link>

    <xacro:macro name="joint_trans" params="prefix name">
        <transmission name="${prefix}_trans">
                <type>transmission_interface/SimpleTransmission</type>
                <actuator name="${prefix}_motor">
                    <mechanicalReduction>1</mechanicalReduction>
                </actuator>
                <joint name="${name}">
                    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </joint>
        </transmission>
    </xacro:macro>

    <xacro:macro name="vel_joint_trans" params="prefix name">
        <transmission name="${prefix}_trans">
                <type>transmission_interface/SimpleTransmission</type>
                <actuator name="${prefix}_motor">
                    <mechanicalReduction>1</mechanicalReduction>
                    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                </actuator>
                <joint name="${name}">
                    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                </joint>
        </transmission>
    </xacro:macro>

    <!-- front is 0/1; right is -1/1-->
    <xacro:macro name="wheel" params="front right prefix mimic:=''">
        <link name="${prefix}_wheel">
            <visual>
                <geometry>
                    <cylinder length="${w_width}" radius="${w_diam/2}"/>
                </geometry>
                <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
                <material name="black"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${w_width}" radius="${w_diam/2}"/>
                </geometry>
                <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
            </collision>
            <inertial>
                <mass value="${wheel_mass}"/>
                <inertia ixx="${(1/12)*wheel_mass*(3*0.25*w_diam*w_diam + w_width*w_width)}" ixy="0" ixz="0" 
                         iyy="${0.125*wheel_mass*w_diam*w_diam}" iyz="0" izz="${(1/12)*wheel_mass*(3*0.25*w_diam*w_diam + w_width*w_width)}"/>
            </inertial>
        </link>

        <gazebo reference="${prefix}_wheel">
            <mu1 value="200.0"/>
            <mu2 value="100.0"/>
            <kp value="10000000.0" />
            <kd value="1.0" />
            <material>Gazebo/Grey</material>
        </gazebo>

        <xacro:if value="${front==1}">
            <link name="${prefix}_wheel_pivot">
                <visual>
                    <geometry>
                        <sphere radius="1e-3"/>
                    </geometry>
                </visual>
                <!--collision>
                    <geometry>
                        <sphere radius="1e-3"/>
                    </geometry>
                </collision-->
                <inertial>
                    <mass value="1e-1" />
                    <inertia ixx="1" ixy="0.0" ixz="0.0" iyy="1" iyz="0.0" izz="1" />
                </inertial>
            </link>

            <joint name="body_to_${prefix}_pivot" type="revolute">
                <limit effort="1000.0" lower="${-pi/4}" upper="${pi/4}" velocity="0.5"/>
                <axis xyz="0 0 1"/>
                <parent link="base_link"/>
                <child link="${prefix}_wheel_pivot"/>
                <origin xyz="0.65 ${right*(c_width/2 - w_width/2)} 0"/>
                <xacro:if value="${mimic != ''}">
                    <mimic joint="body_to_${mimic}_pivot"/>
                </xacro:if>
            </joint>
            <xacro:joint_trans prefix="${prefix}" name="body_to_${prefix}_pivot"/>

            <joint name="pivot_to_${prefix}_wheel" type="continuous">
                <axis xyz="0 1 0"/>
                <parent link="${prefix}_wheel_pivot"/>
                <child link="${prefix}_wheel"/>
                <origin xyz="0 0 0"/>
                <limit effort="1000.0" velocity="20.5"/>
            </joint>
            <xacro:vel_joint_trans prefix="${prefix}" name="pivot_to_${prefix}_wheel"/>
            
        </xacro:if>

        <xacro:if value="${front==0}">
            <joint name="body_to_${prefix}_wheel" type="continuous">
                <axis xyz="0 1 0"/>
                <parent link="base_link"/>
                <child link="${prefix}_wheel"/>
                <origin xyz="3.55 ${right*(c_width/2 - w_width/2)} 0"/>
                <limit effort="1000.0" velocity="0.5"/>
            </joint>
        </xacro:if>

    </xacro:macro>

    <xacro:wheel front="0" right="-1" prefix="rear_left"/>
    <xacro:wheel front="0" right="1" prefix="rear_right"/>
    <xacro:wheel front="1" right="-1" prefix="front_left"/>
    <xacro:wheel front="1" right="1" prefix="front_right" mimic="front_left"/>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
    <gazebo>       
        <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <robotNamespace>/</robotNamespace>
            <jointName>
                body_to_rear_left_wheel,
                body_to_rear_right_wheel,
                pivot_to_front_right_wheel,
                pivot_to_front_left_wheel,
                body_to_front_right_pivot,
                body_to_front_left_pivot
            </jointName>
            <updateRate>100</updateRate>
            <alwaysOn>true</alwaysOn>
        </plugin>
    </gazebo>
</robot>